#!/bin/sh
CURR_DIR=$(dirname $0);
ENVIRONMENT=$1;

START_TIME=$(date '+%s');
LATEST_TAG="$(${CURR_DIR}/versioning/get-latest -q)";

if [ "${ENVIRONMENT}" = "production" ]; then
  ENV="production";
  DOCKERFILE_PATH="./provisioning/production.Dockerfile";
  IMAGE_TAG="zephinzer/genesis:latest";
  IMAGE_VERSION="zephinzer/genesis:${LATEST_TAG}";
else
  ENV="development";
  DOCKERFILE_PATH="./provisioning/development.Dockerfile";
  IMAGE_TAG="zephinzer/genesis:latest-dev";
  IMAGE_VERSION="zephinzer/genesis:${LATEST_TAG}-dev";
fi;

printf "genesis build > Building Genesis with the following configuration:\n";
printf "genesis build >   ENVIRONMENT: [${ENV}] (from \$ENVIRONMENT)\n";
printf "genesis build >   DOCKERFILE_PATH: [${DOCKERFILE_PATH}]\n";
printf "genesis build >   IMAGE_TAG: [${IMAGE_TAG}]\n";
printf "genesis build >   IMAGE_VERSION: [${IMAGE_VERSION}]\n";
printf "\n";

docker build \
  --file "${DOCKERFILE_PATH}" \
  --tag  "${IMAGE_TAG}" \
  .;

END_TIME=$(date '+%s');
IMAGE_SIZE=$(docker images --format "{{.Repository}}:{{.Tag}}:{{.Size}}" | grep -i "${IMAGE_TAG}" | cut -d ":" -f 3)

printf "\ngenesis build > done in ~$((${END_TIME}-${START_TIME}))s\n";
printf "genesis build > image size: ${IMAGE_SIZE}\n";
printf "genesis build > run the newly built image using:\n";
printf "genesis build >\n";
printf "genesis build >   docker run -p 4000:4000 --name genesis_instance ${IMAGE_TAG};\n";
